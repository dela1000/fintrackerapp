{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/daniel/Desktop/myProjects/fintracker/mobileapp/src/navigation/AppNavigator.js\";\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { style } from \"../../assets/styles/signinStyles\";\nimport Login from \"../loginComponents/Login\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  function LoginScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onLogin = function () {};\n\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Login, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        }\n      });\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nLoginScreen.navigationOptions = {\n  header: null\n};","map":{"version":3,"sources":["/Users/daniel/Desktop/myProjects/fintracker/mobileapp/src/navigation/AppNavigator.js"],"names":["React","style","Login","LoginScreen","onLogin","Component","navigationOptions","header"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAMA,SAASC,KAAT;AAGA,OAAOC,KAAP;;IAGMC,W;;;;;;;;;;;;;;;;UAOJC,O,GAAU,YAAM,CAEf,C;;;;;;;6BALQ;AACP,aAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EANuBJ,KAAK,CAACK,S;;AAA1BF,W,CACGG,iB,GAAoB;AACzBC,EAAAA,MAAM,EAAE;AADiB,C","sourcesContent":["import React from 'react';\nimport { ActivityIndicator, AsyncStorage, Button, StatusBar, View } from 'react-native';\n\n// import { createSwitchNavigator, NavigationContainer } from '@react-navigation/native';\n// import { createStackNavigator } from '@react-navigation/stack';\n\nimport { style } from \"../../assets/styles/signinStyles\";\n\n\nimport Login from '../loginComponents/Login';\n\n\nclass LoginScreen extends React.Component {\n  static navigationOptions = {\n    header: null,\n  };\n  render() {\n    return <Login />\n  }\n  onLogin = () => {\n    // this.props.navigation.navigate('App'); };\n  }\n}\n\n// Auth Loading Screen\n// class AuthLoadingScreen extends React.Component {\n//   constructor() {\n//     super();\n//     this.checkLoginStatus();\n//   }\n//   checkLoginStatus = async () => {\n//     const userToken = await AsyncStorage.getItem('signedIn');\n//     this.props.navigation.navigate(userToken ? 'App' : 'Auth');\n//   };\n\n//   render() {\n//     return (\n//       <View style={style.container}>\n//         <ActivityIndicator />\n//       </View>\n//     );\n//   }\n// }\n\n// const AuthStack = createStackNavigator({ Login: Login });\n\n// export default createAppContainer(createSwitchNavigator(\n//   {\n//     AuthLoading: AuthLoadingScreen,\n//     Auth: AuthStack,\n//   },\n//   {\n//     initialRouteName: 'AuthLoading',\n//   }\n// ));"]},"metadata":{},"sourceType":"module"}