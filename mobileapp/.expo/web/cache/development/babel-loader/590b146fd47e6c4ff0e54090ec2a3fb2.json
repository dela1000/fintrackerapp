{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/daniel/Desktop/myProjects/fintracker/mobileapp/App.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport { AppLoading, Font } from 'expo';\nimport AppNavigator from \"./src/navigation/AppNavigator\";\nimport { isSignedIn, onSignOut } from \"./src/helpers/auth\";\nimport Login from \"./src/loginComponents/Login\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      viewSelected: \"notLoggedIn\",\n      loaded: false,\n      currentUser: null\n    };\n\n    _this.loadFontsAsync = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loaded: true\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.onLogin = function (userData) {\n      _this.setState({\n        currentUser: userData,\n        viewSelected: \"loggedIn\"\n      });\n    };\n\n    _this.onLogout = function (userData) {\n      if (onSignOut()) {\n        _this.setState({\n          currentUser: null,\n          viewSelected: \"notLoggedIn\"\n        });\n      } else {\n        alert(\"An error occurred\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      isSignedIn().then(function (res) {\n        if (res) {\n          _this2.setState({\n            viewSelected: \"loggedIn\"\n          });\n        }\n      }).catch(function (err) {\n        return alert(\"An error occurred\");\n      });\n      this.loadFontsAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.loaded) {\n        return React.createElement(AppLoading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          }\n        });\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          }\n        }, Platform.OS === 'ios' && React.createElement(StatusBar, {\n          barStyle: \"default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          }\n        }), React.createElement(Login, {\n          onLogin: this.onLogin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          }\n        }));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/daniel/Desktop/myProjects/fintracker/mobileapp/App.js"],"names":["React","Component","AppLoading","Font","AppNavigator","isSignedIn","onSignOut","Login","App","state","viewSelected","loaded","currentUser","loadFontsAsync","setState","onLogin","userData","onLogout","alert","then","res","catch","err","flex","Platform","OS"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAGA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,MAAjC;AAEA,OAAOC,YAAP;AAEA,SAASC,UAAT,EAAqBC,SAArB;AAEA,OAAOC,KAAP;;IAEqBC,G;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE,aADR;AAENC,MAAAA,MAAM,EAAE,KAFF;AAGNC,MAAAA,WAAW,EAAE;AAHP,K;;UAORC,c,GAAiB;AAAA;AAAA;AAAA;AAAA;AAGf,oBAAKC,QAAL,CAAc;AAAEH,gBAAAA,MAAM,EAAE;AAAV,eAAd;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAkBjBI,O,GAAU,UAACC,QAAD,EAAc;AACtB,YAAKF,QAAL,CAAc;AAACF,QAAAA,WAAW,EAAEI,QAAd;AAAwBN,QAAAA,YAAY,EAAE;AAAtC,OAAd;AACD,K;;UAEDO,Q,GAAW,UAACD,QAAD,EAAc;AACvB,UAAGV,SAAS,EAAZ,EAAe;AACb,cAAKQ,QAAL,CAAc;AAACF,UAAAA,WAAW,EAAE,IAAd;AAAoBF,UAAAA,YAAY,EAAE;AAAlC,SAAd;AACD,OAFD,MAEO;AACLQ,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;AACF,K;;;;;;;wCAtBmB;AAAA;;AAClBb,MAAAA,UAAU,GACPc,IADH,CACQ,UAACC,GAAD,EAAS;AACb,YAAGA,GAAH,EAAQ;AACN,UAAA,MAAI,CAACN,QAAL,CAAc;AAAEJ,YAAAA,YAAY,EAAE;AAAhB,WAAd;AACD;AACF,OALH,EAMGW,KANH,CAMS,UAAAC,GAAG;AAAA,eAAIJ,KAAK,CAAC,mBAAD,CAAT;AAAA,OANZ;AAQA,WAAKL,cAAL;AACD;;;6BAcQ;AACP,UAAI,CAAC,KAAKJ,KAAL,CAAWE,MAAhB,EAAwB;AACpB,eAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,MAEO;AACL,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACY,YAAAA,IAAI,EAAE;AAAP,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyB,oBAAC,SAAD;AAAW,UAAA,QAAQ,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,UAD5B,EAEE,oBAAC,KAAD;AAAO,UAAA,OAAO,EAAE,KAAKV,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF;AAOD;AACF;;;;EAnD8Bd,S;;SAAZO,G","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, StatusBar, Text, View, Platform, YellowBox } from 'react-native';\n\nimport { AppLoading, Font } from 'expo';\n\nimport AppNavigator from './src/navigation/AppNavigator';\n\nimport { isSignedIn, onSignOut } from \"./src/helpers/auth\";\n\nimport Login from './src/loginComponents/Login';\n\nexport default class App extends Component {\n\n  state = {\n    viewSelected: \"notLoggedIn\",\n    loaded: false,\n    currentUser: null\n  }\n\n  // Load fonts here\n  loadFontsAsync = async () => {\n    // await Font.loadAsync({pacifico: require('./assets/fonts/Pacifico-Regular.ttf')});\n    // await Font.loadAsync({arimo: require('./assets/fonts/Arimo-Regular.ttf')});\n    this.setState({ loaded: true });\n  }\n\n  componentDidMount() {\n    isSignedIn()\n      .then((res) => {\n        if(res) {\n          this.setState({ viewSelected: \"loggedIn\" })\n        }\n      })\n      .catch(err => alert(\"An error occurred\"));\n    // loads fonts\n    this.loadFontsAsync();\n  }\n\n  onLogin = (userData) => {\n    this.setState({currentUser: userData, viewSelected: \"loggedIn\"})\n  }\n\n  onLogout = (userData) => {\n    if(onSignOut()){\n      this.setState({currentUser: null, viewSelected: \"notLoggedIn\"})\n    } else {\n      alert(\"An error occurred\");\n    }\n  }\n\n  render() {\n    if (!this.state.loaded) {\n        return <AppLoading />;\n    } else {\n      return (\n        <View style={{flex: 1}}>\n          {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n          <Login onLogin={this.onLogin}/>\n        </View>\n      )\n      \n    }\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}